# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:8.0
        environment:
         MYSQL_DATABASE: homestead
         MYSQL_USER: homestead
         MYSQL_PASSWORD: secret
    environment:
      APP_ENV: testing
      DB_CONNENCTION: mysql
      DB_HOST: localhost
      DB_PORT: 3306
      DB_DATABASE: homestead
      DB_USERNAME: homestead
      DB_PASSWORD: secret

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout
      - run:
         name: install php extensions
         command: |
          sudo apt-get install -y libpng-dev libjpeg-dev
          sudo docker-php-ext-configure gd --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/
          sudo docker-php-ext-install gd pdo_mysql
          sudo docker-php-ext-enable pdo_mysql
          dockerize -wait tcp://localhost:3306 -timeout 1m
      - restore_cache:
         key: composer-v1-{{ checksum "composer.lock" }}
      - run: composer install -n --prefer-dist
      - save_cache:
         key: composer-v1-{{ checksum "composer.lock" }}
         paths:
           - vendor
      - run:
         name: base64 decode env file
         command: echo $ENV_FILE | base64 -di > .env.testing
      - restore_cache:
         key: npm-v1-{{ checksum "package-lock.json" }}
      - run:
         name: npm ci
         command: |
           if [ ! -d node_modules ]; then
            npm ci
           fi
      - save_cache:
         key: npm-v1-{{ checksum "package-lock.json" }}
         paths:
           - node_modules
      - run: npm run dev
      - run:
         name: php test
         command: vendor/bin/phpunit --testdox

  deploy:
    docker:
      - image: circleci/php:7.3-node-browsers
    steps:
      - add_ssh_keys
      - run:
         name: deploy
         command: |
          ssh -o StrictHostKeyChecking=no -t furofuroapp@${HOST_NAME} "cd FuroFuro && \
            git pull origin master && \
            sudo apt-get install -y libpng-dev libjpeg-dev && \
            sudo docker-php-ext-configure gd --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
            sudo docker-php-ext-install gd && \
            composer install -n --no-dev --prefer-dist && \
            npm ci && \
            npm run prod && \
            php artisan migrate --force && \
            php artisan config:cache"

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
         requires:
           - build
         filters:
           branches:
             only:
              - master
